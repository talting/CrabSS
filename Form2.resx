<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="of.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        A2XzDn396gAAAABJRU5ErkJggg==
</value>
  </data>
</root>